package com.ericsson.fmt.forecasting.engine.impl;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.apache.log4j.Logger;

import weka.classifiers.Classifier;

import com.ericsson.fmt.commons.Constants;
import com.ericsson.fmt.commons.PropertiesReader.ForecastEngineConfig;

public class WekaClassifierConfigReader
{

	private static final Logger			log						= Logger.getLogger(WekaClassifierConfigReader.class);

	private static final List<String>	availableClassifiers	= new ArrayList<String>();
	private static final List<String>	availableNetworks		= new ArrayList<String>();

	public static Classifier getConfiguredWekaClassifier(String functionType)
	{

		String classifier = Constants.WEKA_F_TYPE_TIME_SERIES
				.equals(functionType) ? ForecastEngineConfig
				.getWekaTimeSeriesFunction() : Constants.WEKA_F_TYPE_REGRESSION
				.equals(functionType) ? ForecastEngineConfig
				.getWekaRegressionFunction() : "";

		
		try
		{
			return (Classifier) Class.forName(classifier).newInstance();
		}
		catch (Throwable e)
		{

		}

		log.info("No configured Weka classifiers");
		return null;

	}

	private static void load()
	{

		String[] classes = ForecastEngineConfig.getWekaFunctions().split(",");

		if (classes != null)
		{
			availableClassifiers.addAll(Arrays.asList(classes));
		}
		else
		{
			log.fatal("No weka classifier function found from config!!!");
		}
		classes = ForecastEngineConfig.getEncogFunctions().split(",");
		if (classes != null)
		{
			availableNetworks.addAll(Arrays.asList(classes));
		}
		else
		{
			log.fatal("No encong network functions found from config!!!");
		}

	}

	static
	{
		load();
	}

}
